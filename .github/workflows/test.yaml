name: Tests
on:
  push:
    branches:
      - 'release-2.7*'
  pull_request:
    branches:
      - 'release-2.7*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true

env:
  TEST_USERNAME: admin
  TEST_PASSWORD: password
  CATTLE_BOOTSTRAP_PASSWORD: password
  TEST_BASE_URL: https://127.0.0.1:8005
  API: https://127.0.0.1
  TEST_PROJECT_ID: rancher-dashboard
  CYPRESS_API_URL: http://139.59.134.103:1234/
  TEST_RUN_ID: ${{github.run_number}}-${{github.run_attempt}}-${{github.event.pull_request.title || github.event.head_commit.message}}
  CYPRESS_coverage: true

  E2E_BUILD_DIST_NAME: dist
  E2E_BUILD_DIST_DIR: dist
  E2E_BUILD_DIST_EMBER_NAME: dist_ember
  E2E_BUILD_DIST_EMBER_DIR: dist_ember

jobs:
  e2e-ui-build:
    if: "!contains( github.event.pull_request.labels.*.name, 'ci/skip-e2e')"
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v3
       with:
        fetch-depth: 1
     - name: Setup env
       uses: ./.github/actions/setup
     - name: Build e2e
       run: yarn e2e:build
     - name: Upload e2e build
       uses: actions/upload-artifact@v4
       with:
        name: ${{ env.E2E_BUILD_DIST_NAME }}
        path: ${{ env.E2E_BUILD_DIST_DIR }}/
        if-no-files-found: error
        retention-days: 10
        compression-level: 9
     - name: Upload e2e build ember
       uses: actions/upload-artifact@v4
       with:
        name: ${{ env.E2E_BUILD_DIST_EMBER_NAME }}
        path: ${{ env.E2E_BUILD_DIST_EMBER_DIR }}/
        if-no-files-found: error
        retention-days: 10
        compression-level: 9
  e2e-test:
    if: "!contains( github.event.pull_request.labels.*.name, 'ci/skip-e2e')"
    needs: e2e-ui-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Setup env
        uses: ./.github/actions/setup

      # Installing fixed version of Chrome since latest version does not work (117-118 didn't work)
      # Leaving this here again in case we need to pin to a specific Chrome version in the future
      # - name: Install Chrome 116
      #   run: |
      #     sudo apt-get install -y wget
      #     cd /tmp
      #     wget -q http://mirror.cs.uchicago.edu/google-chrome/pool/main/g/google-chrome-stable/google-chrome-stable_116.0.5845.187-1_amd64.deb
      #     sudo apt-get install -y --allow-downgrades ./google-chrome-stable_116.0.5845.187-1_amd64.deb
      #     google-chrome --version

      - name: Download e2e build
        uses:  actions/download-artifact@v4
        with:
         name: ${{ env.E2E_BUILD_DIST_NAME }}
         path: ${{ env.E2E_BUILD_DIST_DIR }}
      - name: Download e2e build ember
        uses:  actions/download-artifact@v4
        with:
         name: ${{ env.E2E_BUILD_DIST_EMBER_NAME }}
         path: ${{ env.E2E_BUILD_DIST_EMBER_DIR }}
      
      - name: Run Rancher
        run: yarn e2e:docker
      
      - name: Run admin user tests
        run: |
          yarn e2e:prod
          mkdir -p coverage-artifacts/coverage
          cp coverage/e2e/coverage-final.json coverage-artifacts/coverage/coverage-e2e.json
        env: 
          GREP_TAGS: '@adminUser'
          TEST_USERNAME: admin


      - name: Run standard user tests
        if: ${{ success() || failure() }}
        run: |
          yarn e2e:prod
          yarn docker:local:stop
          mkdir -p coverage-artifacts/coverage
          cp coverage/e2e/coverage-final.json coverage-artifacts/coverage/coverage-e2e.json
        env: 
          GREP_TAGS: '@standardUser'
          TEST_USERNAME: standard_user
        
      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: ${{github.run_number}}-${{github.run_attempt}}-coverage
          path: coverage-artifacts/**/*
          
      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: ${{github.run_number}}-${{github.run_attempt}}-screenshots
          path: cypress/screenshots

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      
      - name: Run tests
        uses: ./.github/actions/unit-tests

      - name: Collect Coverage
        run: |
          mkdir -p coverage-artifacts/coverage
          cp coverage/unit/coverage-final.json coverage-artifacts/coverage/coverage-unit.json

      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: ${{github.run_number}}-${{github.run_attempt}}-coverage
          path: coverage-artifacts/**/*

  i18n:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Run i18n lint
        uses: ./.github/actions/i18n-lint

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v3
        with:
          node-version: '14.x'
      
      - name: Install packages
        run: yarn install:ci
      
      - name: Run linters
        run: yarn lint
