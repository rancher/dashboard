locale:
  none: (None)
  en-us: English

buttons:
  add: Add
  remove: Remove

generic:
  cancel: Cancel
  close: Close
  comingSoon: Coming Soon
  created: Created
  customize: Customize
  na: "n/a"
  name: Name
  type: Type
  unknown: Unknown

suffix:
  ib: iB
  cpus: CPUs
  seconds: Seconds

header:
  backToRancher: "← Back to Rancher"

nav:
  ns:
    all: All Namespaces
    user: All User Namespaces
    system: All System Namespaces
    clusterLevel: Cluster-Level Resources
    namespaced: Namespaced Resources
    project: "Project: {name}"
    namespace: "{name}"
    orphan: "Not in a Project"

cluster:
  nodeDriver:
    displayName:
      aliyun: Alibaba ACK
      aliyunecs: Aliyun ECS
      amazonec2: Amazon EC2
      amazoneks: Amazon EKS
      azure: Azure
      azureaks: Azure AKS
      baidu: Baidu CCE
      cloudca: Cloud.ca
      digitalocean: DigitalOcean
      exoscale: Exoscale
      googlegke: Google GKE
      huaweicce: Huawei CCE
      linode: Linode
      oci: Oracle Cloud Infrastructure
      openstack: OpenStack
      oracleoke: Oracle OKE
      otc: Open Telekom Cloud
      packet: Packet
      pinganyunecs: Pinganyun ECS
      rackspace: RackSpace
      rancherkubernetesengine: RKE
      softlayer: SoftLayer
      tencenttke: Tencent TKE
      upcloud: UpCloud
      vmwarevsphere: vSphere
      zstack: ZStack
  provider:
    amazonelasticcontainerservice:
      label: Amazon Elastic Container Service for Kubernetes
      shortLabel: Amazon EKS
    tencentengine:
      label: Tencent Kubernetes Engine
      shortLabel: Tencent TKE
    azurekubernetesservice:
      label: Azure Container Service
      shortLabel: Azure AKS
    aliyunengine:
      label: Aliyun Kubernetes Container Service
      shortLabel: Alibaba ACK
    googlekubernetesengine:
      label: Google Kubernetes Engine
      shortLabel: Google GKE
    k3simport:
      label: Rancher K3S
      shortLabel: K3S
    huaweiengine:
      label: Huawei Cloud Container Engine
      shortLabel: Huawei CCE
    oracleokeengine:
      label: Oracle Container Engine long
      shortLabel: Oracle OKE
    rancherkubernetesengine:
      label: Rancher Kubernetes Engine
      shortLabel: Custom
    custom:
      label: From existing nodes (Custom)
      shortLabel: Custom
    imported:
      label: Import an existing cluster
      shortLabel: Imported

containerResourceLimit:
  label: Container Default Resource Limit
  helpText: Configure how much of the resources the container can consume by default.
  helpTextDetail: The amount of resources the container can consume by default.
  requestsCpu: CPU Reservation
  requestsMemory: Memory Reservation
  limitsCpu: CPU Limit
  limitsMemory: Memory Limit
  cpuPlaceholder: e.g. 1000
  memPlaceholder: e.g. 128

footer:
  docs: Docs
  forums: Forums
  slack: Slack
  issue: File an Issue
  download: Download CLI

servicesPage:
  typeOpts:
    label: Service Type
  serviceTypes:
    clusterIp: Cluster IP
    externalName: External Name
    headless: Headless
    loadBalancer: Load Balancer
    nodePort: Node Port
  externalName:
    label: External Name
    helpText: External Name is intended to specify a canonical DNS name. To hardcode an IP address, use a Headless service.
    placeholder: e.g. my.database.example.com
  selectors:
    label: Selectors
    helpText: If no selector is created, manual endpoints must be made.
  ips:
    label: Listener IPs
    helpText: "Warning: Configuring additional listener IPs is an advanced use case."
    clusterIpHelpText: The Cluster IP address must be within the CIDR range configured for the API server.
    input:
      label: Cluster IP
      placeholder: e.g. 10.0.171.239
    external:
      label: External IPs
      placeholder: e.g. 1.1.1.1
      protip: List of IP addresses for which nodes in the cluster will also accept traffic for this service.
  affinity:
    label: Session Affinity
    helpText: Map connections to a consistent target based on their source IP.
    actionLabels:
      none: There is no session affinity configured.
      clusterIp: ClusterIP
    timeout:
      label: Session Sticky Time
      placeholder: e.g. 10800

clusterIndexPage:
  header: "Cluster: {name}"
  sections:
    nodes:
      label: Unhealthy Nodes
      noRows: "There are no unhealthy nodes to show."
    gatekeeper:
      label: OPA Gatekeeper Constraint Violations
      disabled: OPA Gatekeeper is not configured.
      buttonText: Configure Gatekeeper
      noRows: "There are no contraints with violations to show."
    events:
      label: Events

gatekeeperIndex:
  unavailable: "OPA + Gatekeeper is not available in the system-charts catalog."
  violations: Violations

gatekeeperConfig:
  header: OPA Gatekeeper
  configure:
    description: Description
    helpText:
      listItem1: "OPA Gatekeeper provides first-class integration between OPA (Open Policy Agent) and Kubernetes."
      listItem2: "You can customize Gatekeeper’s yaml configuration or Enable Gatekeeper with defaults."
      listItem3: "For more information, visit the "
      listItem4: "OPA Documentation."
    requirements:
      header: Requirements
      helpText:
        listItem1: "0.1 CPU Cores"
        listItem2: "256 MiB of Memory"
  infoBox:
    auditFromCache: Audit From Cache
    auditInterval: Audit Interval
    constraintViolationsLimit: Constraint Violation Limit
    replicas: Replicas
    imageRepository: Image
    imageTag: Version
  yaml:
    buttonText: Customize

gatekeeperConstraint:
  template: Template
  violations:
    title: Violations
  parameters:
    title: Parameters
    editAsForm: Edit as Form
    editAsYaml: Edit as YAML
    addParameter: Add Parameter
  enforcementAction:
    title: Enforcement Action
  match:
    title: Match
  tab:
    namespaces:
      title: Namespaces
      sub:
        namespaces: Namespaces
        excludedNamespaces: Excluded Namespaces
    selectors:
      title: Selectors
      sub:
        labelSelector:
          title: Label Selector
          addLabel: Add Label
        namespaceSelector:
          title: Namespace Selector
          addNamespace: Add Namespace
    kinds:
      title: Kinds

infoBoxCluster:
  cpu: CPU Usage
  created: Created
  memory: Memory
  pods: Pods
  provider: Provider
  reserved: "{numerator} of {denominator} reserved"
  used: "{numerator} of {denominator} used"
  version: Kubernetes Version
  nodes:
    label: Nodes
    total:
      label: Total Nodes
    worker:
      label: Worker
    etcd:
      label: Etcd
    controlPlane:
      label: Control Plane

resourceDetail:
  header:
    view: "{name}"
    create: "Create {type}"
    edit: "Edit {type}: {name}"
    clone: "Clone from {type}: {name}"
    stage: "Stage from {type}: {name}"
  masthead:
    namespace: "Namespace"
    project: "Project"
    yaml: "YAML"
    overview: "Overview"
  detailTop:
    created: Created
    deleted: Deleted
    ownerReferences: Owner References

resourceTable:
  groupLabel:
    project: "Project:"
    namespace: "<span>Namespace:</span> {name}"
    notInAProject: "Not in a Project"
    notInANamespace: "Not Namespaced"

servicePorts:
  header:
    label: Port Rules
  rules:
    name:
      label: Port Name
      placeholder: e.g. myport
    listening:
      label: Listening Port
      placeholder: e.g. 8080
    protocol:
      label: Protocol
    target:
      label: Target Port
      placeholder: e.g. 80 or http
    node:
      label: Node Port
      placeholder: e.g. 80

sortableTable:
  noRows: "There are no rows to show."
  noData: "There are no rows which match your search query."
  paging:
    generic: |
      {pages, plural,
      =0 {No Items}
      =1 {{count} {count, plural, =1 {Item} other {Items}}}
      other {{from} - {to} of {count} Items}}
    resource: |
      {pages, plural,
      =0 {No {pluralLabel}}
      =1 {{count} {count, plural, =1 {{singularLabel}} other {{pluralLabel}}}}
      other {{from} - {to} of {count} {pluralLabel}}}
    workload: |
      {pages, plural,
      =0 {No Workloads}
      =1 {{count} {count, plural, =1 {Workload} other {Workloads}}}
      other {{from} - {to} of {count} Workloads}}

configmapPage:
  data:
    title: Data
    protip: Use this area for anything that's UTF-8 text data
  tabs:
    binaryData:
      label: Binary Data

wm:
  connection:
    connected: Connected
    disconnected: Disconnected
    error: Error
  containerShell:
    containerName: "Container: {label}"
    clear: Clear
  containerLogs:
    containerName: "Container: {label}"
    clear: Clear
    download: Download
    follow: Follow
    range:
      label: Show the last
      lines: "{value, number} Lines"
      minutes: |
        {value, number} {value, plural,
        =1 {Minute}
        other {Minutes}
        }
      hours: |
        {value, number}
        {value, plural,
        =1 {Hour}
        other {Hours}
        }
      all: "Everything"
    previous: Use Previous Container
    wrap: Wrap Lines
    timestamps: Show Timestamps
    search: Filter
    noMatch: No lines match the current filter.
    noData: There are no log entries to show in the current range.
  kubectlShell:
    title: "Kubectl: {name}"

tableHeaders:
  state: State
  download: Download
  internalExternalIp: "Internal/External IP"
  name: Name
  simpleName: Name
  effect: Effect
  nameUnlinked: Name
  namespaceNameUnlinked: Name
  namespaceName: Name
  node: Node
  nodeName: Name
  roles: Roles
  version: Version
  cpu: CPU
  ram: RAM
  pods: Pods
  age: Age
  image: Image
  rioImage: Image
  podImages: Image
  endpoints: Endpoint
  scale: Scale
  simpleScale: Scale
  weight: Weight
  success: Success
  reqRate: Req Rate
  p95: 95%tile
  keys: Data
  targetKind: Target Type
  target: Target
  matches: Matches
  destination: Target
  username: Username
  userDisplayName: Display Name
  userId: ID
  userStatus: Status
  address: Address
  simpleType: Type
  imageSize: Size
  type: Type
  targetPort: Target
  selector: Selector
  status: Status
  lastHeartbeatTime: Last update
  reason: Reason
  message: Message
  key: Key
  value: Value
  builtIn: Built In
  clusterCreatorDefault: Cluster Creator Default
  resource: Resource
  apiGroup: API Groups
  ingressTarget: Target
  rbac:
    create: Create
    delete: Delete
    get: Get
    list: List
    patch: Patch
    update: Update
    watch: Watch

node:
  detail:
    detailTop:
      ipAddress: IP Address
      version: Version
      os: OS
      containerRuntime: Container Runtime
    glance:
      pidPressure: PID Pressure
      diskPressure: Disk Pressure
      memoryPressure: Memory Pressure
      kubelet: kubelet
      consumptionGauge:
        cpu: CPU
        memory: MEMORY
        pods: PODS
        amount: "{used} of {total} {unit} used"
    tab:
      conditions: Conditions
      info: Info
      address: Address
      images: images
      taints: Taints

ingress:
  rules:
    headers:
      path: Path
      target: Target Service
      port: Port
    hostname: Hostname
    title: Rules
    requestHost:
      label: Request Host
      placeholder: e.g. example.com
    path:
      label: Path
      placeholder: e.g. /foo
    target:
      label: Target Service
    port:
      label: Port
      placeholder: e.g. 80 or http
    addPath: Add Path
    removePath: Remove
    addRule: Add Rule
  certificates:
    headers:
      certificate: Certificate
      hosts: Hosts
    label: Certificates
    defaultCertLabel: Default Ingress Controller Certificate
    certificate:
      label: Certificate - Secret Name
    host:
      label: Host
      placeholder: e.g. example.com
    removeHost: Remove
    addHost: Add Host
    addCertificate: Add Certificate
  defaultBackend:
    label: Default Backend
    warning: "Warning: Default backend is used globally for the entire cluster."
    targetService:
      label: Target Service
    port:
      label: Port
      placeholder: e.g. 80 or http
    noServiceSelected: No default backend is configured.

internalExternalIP:
  none: None

serviceTypes:
  clusterip: Cluster IP
  externalname: External Name
  headless: Headless
  loadbalancer: Load Balancer
  nodeport: Node Port

resourceYaml:
  buttons:
    continue: Continue Editing
    diff: Show Diff

resourceList:
  head:
    create: Create
    createFromYaml: Create from YAML

secret:
  type: Type
  data: Data
  certificate:
    issuer: Issuer
    expires: Expires
    privateKey: Private Key
    caCertificate: CA Certificate
    readFromFile: Read from File
    cn: Domain Name
    plusMore: + {n} more
  registry:
    address: Address
    username: Username
    password: Password
    domainName: Registry Domain Name

workload:
  tabs:
    networking: Networking
    scheduling: Scheduling
    security: Security
  container:
    noResourceLimits: There are no resource requirements configured.
    titles:
      containers: Containers
      ports: Ports
      command: Command
      resources: Resources
      healthCheck: Health Check
      securityContext: Security Context
    name: Container Name
    image: Container Image
    imagePullPolicy: Image Pull Policy
    ports:
      containerPort: Private Container Port
      hostPort: Public Host Port
      protocol: Protocol
      name: Name
    command:
      command: Entrypoint
      args: Arguments
      workingDir: WorkingDir
      env: Environment Variables
      addFromResource: Add from Resource
    healthCheck:
      noHealthCheck: There is not a Readiness Check, Liveness Check or Startup Check configured.
      readinessProbe: Readiness Probe
      livenessProbe: Liveness Probe
      startupProbe: Startup Probe
      livenessTip: Containers will be restarted when this check is failing.  Not recommended for most uses.
      readinessTip: Containers will be removed from service endpoints when this check is failing.  Recommended.
      startupTip: Containers will wait until this check succeeds before attempting other health checks.
      checkInterval: Check Interval
      successThreshold: Success Threshold
      failureThreshold: Failure Threshold
      initialDelay: Initial Delay
      timeout: Timeout
      httpGet:
        port: Check Port
        path: Request Path
        headers: Request Headers
      command:
        command: Command to run
    security:
      privileged: Privileged
      allowPrivilegeEscalation: Privilege Escalation
      runAsNonRoot: Run as Non-Root
      runAsNonRootOptions:
        yesOption: "Yes: containers must run as non-root-user"
        noOption: "No"
      readOnlyRootFilesystem: Read-Only Root Filesystem
      runAsUser: Run as User ID
      runAsGroup: Run as Group ID
      supplementalGroups: Additional Group IDs
      addGroupIDs: Add Group IDs
      fsGroup: Filesystem Group
      addCapabilities: Add Capabilities
      dropCapabilities: Drop Capabilities
      shareProcessNamespace: Share single process namespace
      hostPID: "Use Host PID Namespace"
      hostIPC: "Use Host IPC Namespace"
      sysctls: Sysctls
      sysctlsKey: 'Name'
  networking: 
    networkMode:
      label: Network Mode
      placeholder: Select a Mode...
      options: 
        normal: Normal
        hostNetwork: Host Network
    dnsPolicy: 
      label: DNS Policy
      placeholder: Select a Policy...
      options:
        default: Default
        clusterFirst: Cluster First
        clusterFirstWithHostNet: Cluster First With Host Network
        none: None
    hostname:
      label: Hostname
      placeholder: e.g. web
    subdomain: 
      label: Subdomain
      placeholder: e.g. web
    nameservers: 
      label: DNS Nameservers
      placeholder: e.g. 1.1.1.1
      add: Add Nameserver
    searches: 
      label: DNS Search Domains
      placeholder: e.g. mycompany.com
      add: Add Search Domain
    resolver: DNS Resolver Options
    hostAliases: 
      label: Host Aliases
      tip: Additional /etc/hosts entries to be injected in the container.
      keyLabel: IP Address
      keyPlaceholder: e.g. 1.1.1.1
      valueLabel: Hostname
      valuePlaceholder: e.g. foo.com, bar.com
      add: Add Alias
  scheduling:
    titles:
      tab: Scheduling
      nodeScheduling: Node Scheduling
      podScheduling: Pod Scheduling
      tolerations: Tolerations
      priority: Priority
      advanced: Advanced
      nodeSelector: Nodes with these labels
    activeDeadlineSeconds: Pod Active Deadline
    terminationGracePeriodSeconds: Termination Grace Period
    activeDeadlineSecondsTip: The duration that the pod may be active before the system tries to mark it failed and kill associated containers.
    terminationGracePeriodSecondsTip: The duration that the pod needs to terminate gracefully.
    priority:
      priority: Priority
      className: Priority Class Name
    tolerations:
      labelKey: Label Key
      operator: Operator
      value: Value
      effect: Effect
      tolerationSeconds: Toleration Seconds
      addToleration: Add Toleration
      operatorOptions:
        exists: Exists
        equal: "="
      effectOptions:
        all: All
        noSchedule: NoSchedule,
        preferNoSchedule: PreferNoSchedule
        noExecute: NoExecute
    affinity:
      topologyKey:
        label: Topology Key
        placeholder:  e.g. failure-domain.beta.kubernetes.io/zone
      noPodRules: There are no pod scheduling rules configured.
      nodeName: Node Name
      specificNode: Run pods on specific node(s)
      schedulingRules: Run pods on node(s) matching these scheduling rules
      requireAny: "Require any of:"
      preferAny: "Prefer any of:"
      thisPodNamespace: This pod's namespace
      affinityTitle: Run pods on nodes with pods matching these selectors
      antiAffinityTitle: Run pods on nodes without pods matching these selectors
      matchExpressions:
        in: "="
        notIn: ≠
        exists: Exists
        doesNotExist: Does Not Exist
        greaterThan: ">"
        lessThan: <
        key: Key
        value: Value
        operator: Operator
        addRule: Add Rule
        weight: Weight
        inNamespaces: 'Pods in these namespaces:'

rioConfig:
  header: Rio
  configure:
    description: Description
    helpText:
      listItem1: The application deployment engine for Kubernetes.
      listItem2: Rio makes it faster and easier for DevOps to build, test, deploy, scale and version stateless applications
    requirements:
      header: Requirements
      helpText:
        listItem1: 1 CPU Core
        listItem2: 2 GiB of Memory
  yaml:
    buttonText: Customize

validation:
  custom:
    missing: "No validtor exists for { validatorName }! Does the validtor exist in custom-validtors? Is the name spelled correctly?"
  noType: No type to validate
  noSchema: No schema found to validate
  required: '"{key}" is required'
  requiredOrOverride: '"{key}" is required or must allow override'
  arrayLength:
    exactly: '"{key}" should contain {count, plural, =1 {# item} other {# items}}'
    between: '"{key}" should contain between {min} and {max} {max, plural, =1 {item} other {items}}'
    min: '"{key}" should contain at least {count} {count, plural, =1 {item} other {items}}'
    max: '"{key}" should contain at most {count} {count, plural, =1 {item} other {items}}'
  stringLength:
    exactly: '"{key}" should be {count, plural, =1 {# character} other {# characters}}'
    between: '"{key}" should be between {min} and {max} {max, plural, =1 {character} other {characters}}'
    min: '"{key}" should be at least {count} {count, plural, =1 {character} other {characters}}'
    max: '"{key}" should be at most {count} {count, plural, =1 {character} other {characters}}'
  number:
    exactly: '"{key}" should be exactly {val}'
    between: '"{key}" should be between {min} and {max}'
    min: '"{key}" should be at least {val}'
    max: '"{key}" should be at most {val}'
  chars: '"{key}" contains {count, plural, =1 {an invalid character} other {# invalid characters}}: {chars}'
  dns:
    doubleHyphen: '"{key}" Cannot contain two or more consecutive hyphens'
    hostname:
      startDot: '"{key}" cannot start with a dot'
      endDot: '"{key}" cannot end with a dot'
      empty: '"{key}" must be at least one character'
      tooLong: '"{key}" cannot be longer than {max} characters'
      startNumber: '"{key}" cannot start with a number'
      startHyphen: '"{key}" cannot start with a hyphen'
      endHyphen: '"{key}" cannot end with a hyphen'
      emptyLabel: '"{key}" cannot contain two consecutive dots'
      tooLongLabel: '"{key}" cannot contain a section longer than {max} characters'
    label:
      startNumber: '"{key}" cannot start with a number'
      startHyphen: '"{key}" cannot start with a hyphen'
      endHyphen: '"{key}" cannot end with a hyphen'
      emptyLabel: '"{key}" cannot be empty'
      tooLongLabel: '"{key}" cannot be more than {max} characters'
  k8s:
    identifier:
      startLetter: '"{key}" must start with a letter or number'
      endLetter: '"{key}" must end with a letter or number'
      emptyPrefix: '"{key}" cannot have an empty prefix'
      tooLongPrefix: '"{key}" cannot have a prefix longer than {max} characters'
      emptyLabel: '"{key}" cannot have an empty key'
      tooLongKey: '"{key}" cannot have a key longer than {max} characters'
  targets:
    missingProjectId: A target must have a project selected.
  service:
    ports:
      name:
        required: "Port Rule [{position}] - Name is required."
      nodePort:
        requriedInt: "Port Rule [{position}] - Node Port must be interger values if included."
      port:
        requriedInt: "Port Rule [{position}] - Port must be interger values if included."
        required: "Port Rule [{position}] - Port is required."
      targetPort:
        between: "Port Rule [{position}] - Target Port must be between 1 and 65535"
        iana: "Port Rule [{position}] - Target Port must be an IANA Service Name or Integer"
        ianaAt: "Port Rule [{position}] - Target Port "
        required: "Port Rule [{position}] - Target Port is required"

##############################
# Model Properties
##############################
model:
  account:
    kind:
      registeredAgent: Registered Agent
      agent: Agent
      service: Service
      user: User
      admin: Admin
      project: Environment
  cluster:
    name: Cluster Name
  identity:
    displayType:
      user: User
      team: Team
      group: Group
      org: Organization
      localUser: Local User
      unknown: "{type}?"
  ingress:
    displayKind: L7 Ingress
  machine:
    role:
      worker: Worker
      etcd: etcd
      controlPlane: Control Plane
  openldapconfig:
    server:
      label: Hostname or IP Address
    serviceAccountUsername:
      label: Service Account Username
    serviceAccountPassword:
      label: Service Account Password
    domain:
      label: User Search Base
      placeholder: "e.g. ou=Users,dc=mycompany,dc=com"
      help: "Only users below this base will be used."
  projectMember:
    role:
      member: Member
      owner: Owner
      readonly: Read-Only
      restricted: Restricted
  service:
    displayKind:
      generic: Service
      loadBalancer: L4 Balancer
projectPage:
  namespaces: Namespaces
  tabs:
    resourceQuota:
      numberPlaceholder: "e.g. {number}"
      label: Resource Quota
      add: Add
      remove: Remove
      headers:
        resourceType: Resource Type
        projectLimit: Project Limit
        defaultLimit: Namespace Default Limit
      options:
        cpuLimit: "CPU Limit"
        cpuReservation: "CPU Reservation"
        memoryLimit: "Memory Limit"
        memoryReservation: "Memory Reservation"
        storageReservation: "Storage Reservation"
        servicesLoadBalancers: "Services - Load Balancers"
        servicesNodePorts: "Services - Node Ports"
        pods: "Pods"
        services: "Services"
        configMaps: "Config Maps"
        persistentVolumeClaims: "Persistent Volume Claims"
        replicationControllers: "Replication Controllers"
        secrets: "Secrets"
    containerResourceLimit:
      label: Container Resource Limit
