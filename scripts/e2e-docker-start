#!/usr/bin/env bash

set -euo pipefail

DIR=$(cd "$(dirname "$0")/.."; pwd)
DASHBOARD_DIST="${DIR}/dist"
EMBER_DIST="${DIR}/dist_ember"
RANCHER_IMG_VERSION="head"
VOLUME_ARGS="-v ${DASHBOARD_DIST}:/usr/share/rancher/ui-dashboard/dashboard -v ${EMBER_DIST}:/usr/share/rancher/ui"

if [ $# -eq 1 ]; then
  RANCHER_IMG_VERSION=$1
  VOLUME_ARGS=""
fi

echo "Using Rancher image version: ${RANCHER_IMG_VERSION}"

# Define cleanup function to always run on exit
cleanup() {
  echo "===== Collecting Rancher container logs ====="
  docker logs cypress > rancher-container.log 2>&1 || true
  cat rancher-container.log

  echo "===== Collecting k3s logs ====="
  docker exec cypress journalctl -u k3s > k3s.log 2>&1 || echo "Failed to get k3s logs"

  echo "===== Collecting rancher-webhook pod logs ====="
  docker exec cypress kubectl -n cattle-system get pods -l app=rancher-webhook -o name | while read pod; do
    docker exec cypress kubectl -n cattle-system logs "$pod" > "webhook-${pod##*/}.log" 2>&1 || true
    echo "--- Logs from $pod ---"
    cat "webhook-${pod##*/}.log"
  done
}
trap cleanup EXIT

# Run Rancher
docker run -d --restart=unless-stopped -p 80:80 -p 443:443 ${VOLUME_ARGS} \
  -e CATTLE_UI_OFFLINE_PREFERRED=true \
  -e CATTLE_BOOTSTRAP_PASSWORD=password \
  -e CATTLE_PASSWORD_MIN_LENGTH=3 \
  -e CATTLE_DEBUG=true \
  -e CATTLE_TRACE=true \
  --name cypress \
  --privileged \
  crobby/rancher:${RANCHER_IMG_VERSION} \
  --debug=true \
  --features=oidc-provider=true

docker ps

echo "Waiting for dashboard UI to be reachable (initial 20s wait) ..."
sleep 20

# Wait for dashboard to become available
echo "Waiting for dashboard UI to be reachable ..."
okay=0
while [ $okay -lt 30 ]; do
  STATUS=$(curl --silent --head -k https://127.0.0.1/dashboard/ | awk '/^HTTP/{print $2}')
  echo "Status: $STATUS (Try: $okay)"
  okay=$((okay+1))
  if [ "$STATUS" == "200" ]; then
    okay=100
  else
    sleep 5
  fi
done

if [ "$STATUS" != "200" ]; then
  echo "Dashboard did not become available in a reasonable time"
  exit 1
fi

echo "Dashboard UI is ready"

# Wait for webhook to be ready
echo "Waiting for webhook to be running..."
okay=0
while [ $okay -lt 30 ]; do
  if docker exec cypress kubectl -n cattle-system get po -l app=rancher-webhook | grep -q '1/1.*Running'; then
    break
  else
    echo "Webhook not ready, checking again in 10s..."
    okay=$((okay+1))
    sleep 10
  fi
done

echo "Rancher is ready"
